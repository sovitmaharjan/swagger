openapi: 3.0.0
info:
  title: Swagger
  description: Swagger
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Admin
  - name: Admin > Company
  - name: Admin > Status
  - name: Client
  - name: Client > Company
paths:
  /admin/company:
    post:
      tags:
        - Admin > Company
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Company One
                address:
                  type: string
                  example: Kalikasthan
                email:
                  type: string
                  example: abc@gmail.com
                status_id:
                  type: integer
                  example: '1'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Company
      summary: all
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{slug}:
    post:
      tags:
        - Admin > Company
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Company One edit
                address:
                  type: string
                  example: Kalikasthans
                email:
                  type: string
                  example: abcd@gmail.com
                _method:
                  type: string
                  example: PUT
                status_id:
                  type: integer
                  example: '1'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-one-edit
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Company
      summary: find by slug
      security:
        - noauthAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-one
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Company
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-one-edit
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/status:
    post:
      tags:
        - Admin > Status
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: status 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/status:
    get:
      tags:
        - default
      summary: all status
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/status/{status_id}:
    delete:
      tags:
        - Admin > Status
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: status_id
          in: path
          schema:
            type: integer
          required: true
          example: '21'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/my-company:
    get:
      tags:
        - Client > Company
      summary: my company
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user:
    get:
      tags:
        - default
      summary: test
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - default
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@admin.com
                password:
                  type: string
                  example: P@ssw0rd
      parameters:
        - name: superadmin@admin.com
          in: query
          schema:
            type: string
          example: P@ssword
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/register:
    post:
      tags:
        - default
      summary: register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: superadmin2
                email:
                  type: string
                  example: superadmin2@admin.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                company_id:
                  type: string
                  description: nullable
                status_id:
                  type: string
                  description: nullable
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
